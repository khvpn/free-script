#!/bin/bash

clear
GROUPNAME=nogroup
VERSION_ID=$(cat /etc/os-release | grep "VERSION_ID")
CHECKSYSTEM=$(tail -n +2 /etc/openvpn/server.conf | grep "^username-as-common-name")
# IP=$(ip addr | grep 'inet' | grep -v inet6 | grep -vE '127\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | grep -o -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | head -1)
# if [[ "$IP" = "" ]]; thenN
IP=$(wget -4qO- "http://whatismyip.akamai.com/")
#
# Color
BLUE='\033[0;34m'
GREEN='\033[0;32m'
RED='\033[0;31m'
CYAN='\033[0;36m'
NC='\033[0m'
z1='\e[31;1m'  #red
z2='\e[34;1m'  #blue
z3='\e[32;1m'  #green
z4='\e[35;1m'  #magenta
z5='\e[36;1m'  #cyan
z6='\e[33;1m'  #yellow
z7='\e[0m'
cor[1]="\033[1;36m"
cor[2]="\033[1;33m"
cor[3]="\033[1;31m"
cor[5]="\033[1;32m"
cor[4]="\033[0m"
color1='\e[031;1m'
color2='\e[34;1m'
color3='\e[0m'

# ads
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
chek=$(cat /etc/issue.net)
tram=$( free -m | awk 'NR==2 {print $2}' )
up=$(uptime|awk '{ $1=$2=$(NF-6)=$(NF-5)=$(NF-4)=$(NF-3)=$(NF-2)=$(NF-1)=$NF=""; print }')
echo -e "\e[032;1mSYSTEM OS:\e[0m  $chek" 
echo -e "\e[032;1mTotal Amount Of RAM:\e[0m $tram MB"
echo -e "\e[032;1mSystem Uptime:\e[0m $up"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m" 
if [ -e "/var/log/auth.log" ]; then
        LOG="/var/log/auth.log";
fi
if [ -e "/var/log/secure" ]; then
        LOG="/var/log/secure";
fi
               
echo " "
echo "-----=[ OpenSSH User Login ]=-----";
echo "ID  |  Username  |  IP Address";
echo "-------------------------------------";
cat $LOG | grep -i sshd | grep -i "Accepted password for" > /tmp/login-db.txt
data=( `ps aux | grep "\[priv\]" | sort -k 72 | awk '{print $2}'`);

for PID in "${data[@]}"
do
        cat /tmp/login-db.txt | grep "sshd\[$PID\]" > /tmp/login-db-pid.txt;
        NUM=`cat /tmp/login-db-pid.txt | wc -l`;
        USER=`cat /tmp/login-db-pid.txt | awk '{print $9}'`;
        IP=`cat /tmp/login-db-pid.txt | awk '{print $11}'`;
        if [ $NUM -eq 1 ]; then
                echo "$PID - $USER - $IP";
        fi
done
if [ -f "/etc/openvpn/openvpn-status.log" ]; then
        line=`cat /etc/openvpn/openvpn-status.log | wc -l`
        a=$((3+((line-8)/2)))
        b=$(((line-8)/2))
        echo " "
        echo "-----=[ OpenVPN User Login ]=-----";
        echo "Username  |  IP Address  |  Connected Since";
        echo "-------------------------------------";
        cat /etc/openvpn/openvpn-status.log | head -n $a | tail -n $b | cut -d "," -f 1,2,5 | sed -e 's/,/   /g' > /tmp/vpn-login-db.txt
        cat /tmp/vpn-login-db.txt
fi
	echo "-------------------------------------------------------" 
	echo "|||||||||||||||| fastnetvpn.pw |||||||||||||||||" 
	echo "-------------------------------------------------------"
echo -e "|${z1} 1${NC}|${z2} បង្កើតឈ្មោះអ្នកប្រើប្រាស់ OpenVPN (Config)${NC} "
	echo -e "|${z1} 2${NC}|${z2} បន្ថែមឈ្មោះអ្នកប្រើប្រាស់ {User/Pass}  SSH (HTTP) VPN (OPENVPN)${NC} "
if [[ "$VERSION_ID" = 'VERSION_ID="7"' || "$VERSION_ID" = 'VERSION_ID="8"' || "$VERSION_ID" = 'VERSION_ID="14.04"' ]]; then
		if [[ ! -e /etc/squid3/squid.conf ]]; then
	echo -e "|${z1} 3${NC}|${z2} ដំឡើង SQUID PROXY${NC} ${RED}Install NO${NC} "
		elif [[ -e /etc/squid3/squid.conf ]]; then
	echo -e "|${z1} 3${NC}|${z2} លុបការដំឡើង SQUID PROXY${NC} ${GREEN}Install YES${NC} "
		fi

	elif [[ "$VERSION_ID" = 'VERSION_ID="9"' || "$VERSION_ID" = 'VERSION_ID="16.04"' || "$VERSION_ID" = 'VERSION_ID="18.04"' ]]; then
		if [[ ! -e /etc/squid/squid.conf ]]; then
	echo -e "|${z1} 3${NC}|${z2} ដំឡើង SQUID PROXY${NC} ${RED}Install NO${NC} "
		elif [[ -e /etc/squid/squid.conf ]]; then
	echo -e "|${z1} 3${NC}|${z2} លុបការដំឡើង SQUID PROXY${NC} ${GREEN}Install YES${NC} "
		fi
	fi
	echo -e "|${z1} 4${NC}|${z2} បើក-បិទ ការប្រើប្រាស់ Openvpn តភ្ជាប់បានដោយមិនកំណត់ចំនួន  "
	echo -e "|${z1} 5${NC}|${z2} បើក-បិទ restart ការដំណើរការរបស់ប្រព័ន្ធ "
	echo -e "|${z1} 6${NC}|${z2} ត្រួតពិនិត្យបញ្ជីជាអ្នកប្រើប្រាស់ SSH ទាំងអស់ ${NC} "
	echo -e "|${z1} 7${NC}|${z2} លុបបញ្ជីអ្នកប្រើប្រាស់ SSH "
	echo -e "|${z1} 8${NC}|${z2} លុបបញ្ជីរអ្នកប្រើប្រាស់ OPENVPN ${NC} "
	echo -e "|${z1} 9${NC}|${z2} ផ្លាស់ប្ដូរលេខសម្ងាត់ server ${NC} "
	echo -e "|${z1}10${NC}|${z2} រៀបចំពេលវេលា Reboot server ដោយខ្លួនឯង "
	echo -e "|${z1}11${NC}|${z2} ត្រួតពិនិត្យ Banwith បញ្ជីនីមួយៗ ${NC} "
	echo -e "|${z1}12${NC}|${z2} ផ្លាស់ប្ដូរលេខសម្ងាត់បញ្ជីរអ្នកប្រើប្រាស់ ${NC} "
	echo -e "|${z1}13${NC}|${z2} ផ្លាស់ប្ដូរថ្ងៃផុតកំណត់បញ្ជីរអ្នកប្រើប្រាស់ ${NC} "
	echo -e "|${z1}14${NC}|${z2} ត្រួតពិនិត្យការប្រើប្រាស់ Banwith " 
	echo -e "|${z1}15${NC}|${z2} កំណត់ល្បឿនអ៊ីនធឺណេត  "
	echo -e "|${z1}16${NC}|${z2} Lock ហើយ unlock បញ្ជីអ្នកប្រើប្រាស់ {User/Pass} ${NC} "
	echo -e "|${z1}17${NC}|${z2} ------- ${NC} "
	echo -e "|${z1}18${NC}|${z2} ត្រួតពិនិត្យ Banwith រៀងរាល់ 1 ម៉ោងម្ដង ${NC} ${GREEN} ✔ ${NC} "
	echo -e "|${z1}19${NC}|${z2} MENU ហ្វាល់ស្រ្គីបរបស់មេនុយ ${NC} "
	echo -e "|${z1}20${NC}|${z2} Update Credits Bannerssh ${NC} "
	echo -e "|${z1}21${NC}|${z2} ------- ${NC} "
	echo -e "|${z1}22${NC}|${z2} EDIT_PORT OPENVPN ${NC} "
	echo -e "|${z1}23${NC}|${z2} EDIT_SQUID3 & EDIT_SQUID ${NC} "
	echo -e "|${z1}24${NC}|${z2} EDIT_PORTSSH ${NC} "
	echo -e "|${z1}25${NC}|${z2} EDIT_Config Openvpn  ${NC} "
	echo -e "|${z1}26${NC}|${z2} Restart Openvpn  ${NC} "
	echo -e "|${z1}27${NC}|${z2} Reboot SERVER VPS  ${NC} "
	echo -e "|${z1}28${NC}|${z2} Restart SQUID+SQUID3  ${NC} "
        echo -e "|00|${cor[2]} Update MENU SCRIPT ${NC} ${GREEN} ✔ ${NC} "
	echo ""
	echo -e "${BLUE}>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<< ${NC}"
	# vnstat meter
if [[ -e /etc/vnstat.conf ]]; then
	INTERFACE=`vnstat -m | head -n2 | awk '{print $1}'`
	TOTALBW=$(vnstat -i $INTERFACE --nick local | grep "total:" | awk '{print $8" "substr ($9, 1, 1)}')
fi

ON=0
OFF=0
while read ONOFF
do
	ACCOUNT="$(echo $ONOFF | cut -d: -f1)"
	ID="$(echo $ONOFF | grep -v nobody | cut -d: -f3)"
	ONLINE="$(cat /etc/openvpn/openvpn-status.log | grep -Eom 1 $ACCOUNT | grep -Eom 1 $ACCOUNT)"
	if [[ $ID -ge 1000 ]]; then
		if [[ -z $ONLINE ]]; then
			OFF=$((OFF+1))
		else
			ON=$((ON+1))
		fi
		fi
done < /etc/passwd
bash Auto-Delete-Client
echo -e "Banwith ដែលប្រើប្រាស់ទាំងអស់ ${GRAY}$TOTALBW${NC}${GRAY}B${NC}  |  កំពុងតភ្ជាប់ ${GRAY}$ON${NC} បញ្ជីអ្នកប្រើប្រាស់"
echo -e "${BLUE}>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<< ${NC}"
        read -p "ជ្រើសរើសអ្វីដែលអ្នកត្រូវការប្រើប្រាស់ : " MENU
echo ""
case $MENU in
1) # ==================================================================================================================
	
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
if [[ $CHECKSYSTEM ]]; then
	echo ""
	read -p "ឈ្មោះបញ្ជីដែលអ្នកត្រូវការបង្កើត : " -e CLIENT

	if [ $? -eq 0 ]; then
		read -p "លេខសម្ងាត់ : " -e PASSWORD
		echo ""
		echo -e " កំណត់លេខ 30 សម្រាប់បញ្ជីដែលអ្នកបង្កើតឡើងអាចប្រើប្រាស់បានរយៈពេល 30 ថ្ងៃ "
		read -p "កំណត់ថ្ងៃផុតកំណត់ : " -e TimeActive

		PROXY=$(grep '^http_port ' /etc/squid/squid.conf | cut -d " " -f 2)
		PROXY=$(grep '^http_port ' /etc/squid3/squid.conf | cut -d " " -f 2)
		useradd -e `date -d "$TimeActive days" +"%Y-%m-%d"` -s /bin/false -M $CLIENT
		EXP="$(chage -l $CLIENT | grep "Account expires" | awk -F": " '{print $2}')"
		echo -e "$PASSWORD\n$PASSWORD\n"|passwd $CLIENT &> /dev/null

		clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
		echo "បញ្ជីអ្នកប្រើប្រាស់ : $CLIENT"
		echo "លេខសម្ងាត់ : $PASSWORD"
		echo "កំណត់ថ្ងៃទី : $EXP"
		echo ""
		echo "IP : $IP"
		echo "Port : 22"
		echo "Proxy Port : $PROXY"
		exit
	else
		echo ""
		echo "ឈ្មោះបញ្ជីដែលអ្នកបង្កើតមានរួចហើយ"
		echo ""
		read -p "ត្រឡប់ទៅមេនុយដើម (Y or N) : " -e -i Y TOMENU

		if [[ "$TOMENU" = 'Y' ]]; then
			m
			exit
		elif [[ "$TOMENU" = 'N' ]]; then
			exit
		fi
	fi

else

	echo ""
	read -p "ឈ្មោះបញ្ជីដែលអ្នកត្រូវការបង្កើត : " -e CLIENT

	if [[ -e /etc/openvpn/easy-rsa/pki/private/$CLIENT.key ]]; then
		echo ""
		echo "ឈ្មោះបញ្ជីដែលអ្នកបង្កើតមានរួចហើយ"
		echo ""
		read -p "ត្រឡប់ទៅមេនុយដើម (Y or N) : " -e -i Y TOMENU

		if [[ "$TOMENU" = 'Y' ]]; then
			menu
			exit
		elif [[ "$TOMENU" = 'N' ]]; then
			exit
		fi
	fi

	echo ""
	echo -e " កំណត់លេខ 30 សម្រាប់បញ្ជីដែលអ្នកបង្កើតឡើងអាចប្រើប្រាស់បានរយះពេល 30 ថ្ងៃ "
	read -p "កំណត់ថ្ងៃផុតកំណត់ : " -e TimeActive

newclient () {
	# Generates the custom client.ovpn
	cp /etc/openvpn/client-common.txt ~/$1.ovpn
	echo "<ca>" >> ~/$1.ovpn
	cat /etc/openvpn/easy-rsa/pki/ca.crt >> ~/$1.ovpn
	echo "</ca>" >> ~/$1.ovpn
	echo "<cert>" >> ~/$1.ovpn
	sed -ne '/BEGIN CERTIFICATE/,$ p' /etc/openvpn/easy-rsa/pki/issued/$1.crt >> ~/$1.ovpn
	echo "</cert>" >> ~/$1.ovpn
	echo "<key>" >> ~/$1.ovpn
	cat /etc/openvpn/easy-rsa/pki/private/$1.key >> ~/$1.ovpn
	echo "</key>" >> ~/$1.ovpn
	echo "<tls-auth>" >> ~/$1.ovpn
	sed -ne '/BEGIN OpenVPN Static key/,$ p' /etc/openvpn/ta.key >> ~/$1.ovpn
	echo "</tls-auth>" >> ~/$1.ovpn
}

	RANDOMFOLDER=$(cat /dev/urandom | tr -dc 'a-zA-Z' | fold -w 4 | head -n 1)
	mkdir /home/vps/public_html/$RANDOMFOLDER
	cd /etc/openvpn/easy-rsa/
	./easyrsa build-client-full $CLIENT nopass
	newclient "$CLIENT"
	cp /root/$CLIENT.ovpn /home/vps/public_html/$RANDOMFOLDER/$CLIENT.ovpn
	rm -f /root/$CLIENT.ovpn
	useradd -e `date -d "$TimeActive days" +"%Y-%m-%d"` -s /bin/false -M $CLIENT
	EXP="$(chage -l $CLIENT | grep "Account expires" | awk -F": " '{print $2}')"
	echo -e "$CLIENT\n$CLIENT\n"|passwd $CLIENT &> /dev/null

	clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
	echo "ឈ្មោះបញ្ជីអ្នកប្រើប្រាស់ : $CLIENT"
	echo "ផុតកំណត់ថ្ងៃទី : $EXP"
	echo ""
	echo "ដោនឡូតខនហ្វីក : http://$IP:85/$RANDOMFOLDER/$CLIENT.ovpn "
	echo ""
	exit

fi

	;;

2) # ==================================================================================================================

echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
	read -p "ឈ្មោះបញ្ជីដែលអ្នកត្រូវការបង្កើត : " -e CLIENT

	if [ $? -eq 0 ]; then
		read -p "លេខសម្ងាត់ : " -e PASSWORD
		echo ""
		echo -e "     ${GRAY}កំណត់លេខ 30 សម្រាប់បញ្ជីដែលអ្នកបង្កើតឡើងអាចប្រើប្រាស់បានរយៈពេល 30 ថ្ងៃ${NC}"
		read -p "កំណត់ថ្ងៃផុតកំណត់ : " -e TimeActive

		PROXY=$(grep '^http_port ' /etc/squid/squid.conf | cut -d " " -f 2)
		PROXY=$(grep '^http_port ' /etc/squid3/squid.conf | cut -d " " -f 2)
		useradd -e `date -d "$TimeActive days" +"%Y-%m-%d"` -s /bin/false -M $CLIENT
		EXP="$(chage -l $CLIENT | grep "Account expires" | awk -F": " '{print $2}')"
		echo -e "$PASSWORD\n$PASSWORD\n"|passwd $CLIENT &> /dev/null

		clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
		echo "បញ្ជីអ្នកប្រើប្រាស់    : $CLIENT"
		echo "លេខសម្ងាត់       : $PASSWORD"
		echo "ផុតកំណត់ថ្ងៃទី     : $EXP "
		echo "IP            : $IP"
		echo "Port OpenSSH  : 22 "
		echo "Proxy Port    : 8080 "
		exit
	else
		echo ""
		echo "បញ្ជីដែលអ្នកបង្កើតមានរួចហើយ"
		echo ""
		read -p "ត្រឡប់ទៅមេនុយដើមกลับไปที่เมนู (Y or N) : " -e -i Y TOMENU

		if [[ "$TOMENU" = 'Y' ]]; then
			m
			exit
		elif [[ "$TOMENU" = 'N' ]]; then
			exit
		fi
	fi

	;;

3) # =================================================================================================================
	
if [[ -e /etc/squid3/squid.conf ]]; then
	apt-get -y remove --purge squid3
	clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${NC} "
echo ""
	echo "Squid Proxy .....Removed."
	exit
elif [[ -e /etc/squid/squid.conf ]]; then
	apt-get -y remove --purge squid
	clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
	echo "Squid Proxy .....Removed."
	exit
fi

read -p "Port Proxy : " -e -i 8000 PROXY

if [[ "$VERSION_ID" = 'VERSION_ID="10"' || "$VERSION_ID" = 'VERSION_ID="8"' || "$VERSION_ID" = 'VERSION_ID="14.04"' ]]; then
	apt-get -y install squid3
	cat > /etc/squid3/squid.conf <<END
http_port $PROXY
acl localhost src 127.0.0.1/32 ::1
acl to_localhost dst 127.0.0.0/8 0.0.0.0/32 ::1
acl localnet src 10.0.0.0/8
acl localnet src 172.16.0.0/12
acl localnet src 192.168.0.0/16
acl SSL_ports port 443
acl Safe_ports port 80
acl Safe_ports port 21
acl Safe_ports port 443
acl Safe_ports port 70
acl Safe_ports port 210
acl Safe_ports port 1025-65535
acl Safe_ports port 280
acl Safe_ports port 488
acl Safe_ports port 591
acl Safe_ports port 777
acl CONNECT method CONNECT
acl SSH dst xxxxxxxxx-xxxxxxxxx/255.255.255.255
http_access allow SSH
http_access allow localnet
http_access allow localhost
http_access deny all
refresh_pattern ^ftp:           1440    20%     10080
refresh_pattern ^gopher:        1440    0%      1440
refresh_pattern -i (/cgi-bin/|\?) 0     0%      0
refresh_pattern .               0       20%     4320
END
	IP2="s/xxxxxxxxx/$IP/g";
	sed -i $IP2 /etc/squid3/squid.conf;
	if [[ "$VERSION_ID" = 'VERSION_ID="14.04"' ]]; then
		service squid3 restart
	else
		/etc/init.d/squid3 restart
	fi
	clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
	echo "Squid Proxy .....Install finish."
	echo "IP Proxy : $IP"
	echo "Port Proxy : $PROXY"
	echo ""
	exit

elif [[ "$VERSION_ID" = 'VERSION_ID="9"' || "$VERSION_ID" = 'VERSION_ID="16.04"' || "$VERSION_ID" = 'VERSION_ID="18.04"' ]]; then
	apt-get -y install squid
	cat > /etc/squid/squid.conf <<END
http_port $PROXY
acl localhost src 127.0.0.1/32 ::1
acl to_localhost dst 127.0.0.0/8 0.0.0.0/32 ::1
acl localnet src 10.0.0.0/8
acl localnet src 172.16.0.0/12
acl localnet src 192.168.0.0/16
acl SSL_ports port 443
acl Safe_ports port 80
acl Safe_ports port 21
acl Safe_ports port 443
acl Safe_ports port 70
acl Safe_ports port 210
acl Safe_ports port 1025-65535
acl Safe_ports port 280
acl Safe_ports port 488
acl Safe_ports port 591
acl Safe_ports port 777
acl CONNECT method CONNECT
acl SSH dst xxxxxxxxx-xxxxxxxxx/255.255.255.255
http_access allow SSH
http_access allow localnet
http_access allow localhost
http_access deny all
refresh_pattern ^ftp:           1440    20%     10080
refresh_pattern ^gopher:        1440    0%      1440
refresh_pattern -i (/cgi-bin/|\?) 0     0%      0
refresh_pattern .               0       20%     4320
END
	IP2="s/xxxxxxxxx/$IP/g";
	sed -i $IP2 /etc/squid/squid.conf;
	/etc/init.d/squid restart
	clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
	echo "Squid Proxy .....Install finish."
	echo "IP Proxy : $IP"
	echo "Port Proxy : $PROXY"
	echo ""
	exit

fi

	;;


4) # ==================================================================================================================

clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
echo " ផ្លាស់ប្ដូរប្រព័ន្ធរបស់ server "
echo ""
echo -e " |${GRAY}1${NC}| 1 ហ្វាល់អាចធ្វើការតភ្ជាប់បាន 1 អ្នកប៉ុណ្ណោះ តើអាចធ្វើការបង្កើត file ថែមទៀតបាន"
echo -e " |${GRAY}2${NC}| 1 ហ្វាលើអាចធ្វើការតភ្ជាប់បានច្រើននាក់ តែត្រូវប្រើឈ្មោះបញ្ជីនិងលេខសម្ងាត់ដើម្បីធ្វើការតភ្ជាប់"
echo -e " |${GRAY}3${NC}| 1 ហ្វាល់អាចធ្វើការតភ្ជាប់បានដោយមិនកំណត់ចំនួនអ្នកប្រើប្រាស់"
echo ""
read -p "ជ្រើសរើសណាមួយដែលអ្នកត្រូវការប្រើប្រាស់ : " CHANGESYSTEMSERVER

case $CHANGESYSTEMSERVER in

	1)

sed -i '28d' /etc/openvpn/server.conf
sed -i '28d' /etc/openvpn/server.conf
sed -i '28d' /etc/openvpn/server.conf
sed -i '20d' /etc/openvpn/client-common.txt
echo "client-to-client" >> /etc/openvpn/server.conf
echo ""
echo " ផ្លាស់ប្ដូរប្រព័ន្ធរបស់ server ជារូបបែបទី 1 រួចរាល់ "
echo ""
service openvpn restart

	;;

	2)

sed -i '28d' /etc/openvpn/server.conf
sed -i '28d' /etc/openvpn/server.conf
sed -i '28d' /etc/openvpn/server.conf
sed -i '20d' /etc/openvpn/client-common.txt
if [[ "$VERSION_ID" = 'VERSION_ID="7"' ]]; then
	echo "plugin /usr/lib/openvpn/openvpn-auth-pam.so /etc/pam.d/login" >> /etc/openvpn/server.conf
	echo "client-cert-not-required" >> /etc/openvpn/server.conf
	echo "username-as-common-name" >> /etc/openvpn/server.conf
else
	echo "plugin /usr/lib/openvpn/openvpn-plugin-auth-pam.so /etc/pam.d/login" >> /etc/openvpn/server.conf
	echo "client-cert-not-required" >> /etc/openvpn/server.conf
	echo "username-as-common-name" >> /etc/openvpn/server.conf
fi
echo "auth-user-pass" >> /etc/openvpn/client-common.txt
echo ""
echo " ផ្លាស់ប្ដូរប្រព័ន្ធរបស់ server ជារូបបែបទី 2 រួចរាល់ "
echo ""
service openvpn restart

	;;

	3)

sed -i '28d' /etc/openvpn/server.conf
sed -i '28d' /etc/openvpn/server.conf
sed -i '28d' /etc/openvpn/server.conf
sed -i '20d' /etc/openvpn/client-common.txt
echo "duplicate-cn" >> /etc/openvpn/server.conf
echo ""
echo " ផ្លាស់ប្ដូរប្រព័ន្ធរបស់ server ជារូបបែបទី 3 រួចរាល់ "
echo ""
service openvpn restart

	;;
	
esac

	;;

5) # ==================================================================================================================
	
clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
echo " បើក-បិទ restart ការដំណើរការរបស់ប្រព័ន្ធ KHMERNET VPN "
echo ""
echo "|1| OPENVPN"
echo "|2| SSH DROPBEAR"
echo "|3| SQUID PROXY"
echo ""
read -p "ជ្រើសរើសមួយណាដែលអ្នកត្រូវការប្រើប្រាស់ : " SERVICE

case $SERVICE in

	1)

	echo ""
	echo "|1| បើក"
	echo "|2| បទ"
	echo "|3| restart"
	echo ""
	read -p "	ជ្រើសរើសមួយណាដែលអ្នកត្រូវការប្រើប្រាស់ : " SERVICEOPENVPN

	case $SERVICEOPENVPN in

		1)
	service openvpn start
	echo ""
	echo "	OpenVPN STARTED "
	echo ""
	exit
		;;

		2)
	service openvpn stop
	echo ""
	echo "	OpenVPN STOPPED "
	echo ""
	exit
		;;

		3)
	service openvpn restart
	echo ""
	echo "	OpenVPN RESTARTED "
	echo ""
	exit
		;;

	esac

	;;

	2)

	echo ""
	echo -e "	|${GRAY}1${NC}| បើក"
	echo -e "	|${GRAY}2${NC}| បិទ ${GRAY}ថាបិទការធ្វើការមិនអាចចូលដំណើរការក្នុងរបប Teminal បានទៀតទេ ${NC} "
	echo -e "	|${GRAY}3${NC}| restart"
	echo ""
	read -p "	រើសមួយណាដែលអ្នកត្រូវការប្រើប្រាស់ : " SERVICEDROPBEAR

	case $SERVICEDROPBEAR in

		1)

	if [[ -e /etc/default/dropbear ]]; then
		service ssh start
		echo ""
		echo -e "	SSH Dropbear ${GRAY}STARTED${NC}"
		echo ""
		exit
	elif [[ ! -e /etc/default/dropbear ]]; then
		echo ""
		echo "	នៅមិនទាន់បានធ្វើការដំឡើង SSH Dropbear"
		echo ""
		exit
	fi
		;;

		2)
	if [[ -e /etc/default/dropbear ]]; then
		service ssh stop
		echo ""
		echo -e "	SSH Dropbear ${GRAY}STOPPED${NC}"
		echo ""
		exit
	elif [[ ! -e /etc/default/dropbear ]]; then
		echo ""
		echo "	នៅមិនទាន់បានធ្វើការដំឡើង SSH Dropbear"
		echo ""
		exit
	fi
		;;

		3)
	if [[ -e /etc/default/dropbear ]]; then
		service ssh restart
		echo ""
		echo -e "	SSH Dropbear ${GRAY}RESTARTED${NC}"
		echo ""
		exit
	elif [[ ! -e /etc/default/dropbear ]]; then
		echo ""
		echo "	នៅមិនទាន់បានធ្វើការដំឡើង SSH Dropbear"
		echo ""
		exit
	fi
		;;

	esac

	;;

	3)

	echo ""
	echo -e "	|${GRAY}1${NC}| បើក"
	echo -e "	|${GRAY}2${NC}| បិទ"
	echo -e "	|${GRAY}3${NC}| restart"
	echo ""
	read -p "	ជ្រើសរើសមួយណាដែលអ្នកត្រូវការប្រើប្រាស់ : " SERVICEPROXY

	case $SERVICEPROXY in

		1)
	if [[ "$VERSION_ID" = 'VERSION_ID="9"' || "$VERSION_ID" = 'VERSION_ID="16.04"' || "$VERSION_ID" = 'VERSION_ID="18.04"' ]]; then
		if [[ ! -e /etc/squid/squid.conf ]]; then
			echo ""
			echo "	នៅមិនទាន់បានដំឡើង Squid Proxy"
			echo ""
			exit
		else
			service squid start
			echo ""
			echo -e "	Squid Proxy ${GRAY}STARTED${NC}"
			echo ""
			exit
		fi
	elif [[ "$VERSION_ID" = 'VERSION_ID="7"' || "$VERSION_ID" = 'VERSION_ID="8"' || "$VERSION_ID" = 'VERSION_ID="14.04"' ]]; then
		if [[ ! -e /etc/squid3/squid.conf ]]; then
			echo ""
			echo "	នៅមិនទាន់បានតំឡើង Squid Proxy"
			echo ""
			exit
		else
			service squid3 start
			echo ""
			echo -e "	Squid Proxy ${GRAY}STARTED${NC}"
			echo ""
			exit
		fi
	fi
		;;

		2)
	if [[ "$VERSION_ID" = 'VERSION_ID="9"' || "$VERSION_ID" = 'VERSION_ID="16.04"' || "$VERSION_ID" = 'VERSION_ID="18.04"' ]]; then
		if [[ ! -e /etc/squid/squid.conf ]]; then
			echo ""
			echo "	នៅមិនទាន់បានតំឡើង Squid Proxy"
			echo ""
			exit
		else
			service squid stop
			echo ""
			echo -e "	Squid Proxy ${GRAY}STOPPED${NC}"
			echo ""
			exit
		fi
	elif [[ "$VERSION_ID" = 'VERSION_ID="7"' || "$VERSION_ID" = 'VERSION_ID="8"' || "$VERSION_ID" = 'VERSION_ID="14.04"' ]]; then
		if [[ ! -e /etc/squid3/squid.conf ]]; then
			echo ""
			echo "	នៅមិនទាន់បានតំឡើង Squid Proxy"
			echo ""
			exit
		else
			service squid3 stop
			echo ""
			echo -e "	Squid Proxy ${GRAY}STOPPED${NC}"
			echo ""
			exit
		fi
	fi
		;;

		3)
	if [[ "$VERSION_ID" = 'VERSION_ID="9"' || "$VERSION_ID" = 'VERSION_ID="16.04"' || "$VERSION_ID" = 'VERSION_ID="18.04"' ]]; then
		if [[ ! -e /etc/squid/squid.conf ]]; then
			echo ""
			echo "	នៅមិនទាន់បានតំឡើង Squid Proxy"
			echo ""
			exit
		else
			service squid restart
			echo ""
			echo -e "	Squid Proxy ${GRAY}RESTARTED${NC}"
			echo ""
			exit
		fi
	elif [[ "$VERSION_ID" = 'VERSION_ID="7"' || "$VERSION_ID" = 'VERSION_ID="8"' || "$VERSION_ID" = 'VERSION_ID="14.04"' ]]; then
		if [[ ! -e /etc/squid3/squid.conf ]]; then
			echo ""
			echo "	នៅមិនទាន់បានតំឡើង Squid Proxy"
			echo ""
			exit
		else
			service squid3 restart
			echo ""
			echo -e "	Squid Proxy ${GRAY}RESTARTED${NC}"
			echo ""
			exit
		fi
	fi
		;;

	esac

	;;

esac

	;;
	
6) # ==================================================================================================================

clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
echo "============================================= "
echo "លេខរៀង       ឈ្មោះបញ្ជី        បង្ហាញ      ថ្ងៃផុតកំណត់ "
echo "============================================= "
C=1
ON=0
OFF=0
while read ONOFF
do
	CLIENTOFFLINE=$(echo -e "${RED}OFFLINE${NC}")
	CLIENTONLINE=$(echo -e "${GREEN}ONLINE${NC}")
	ACCOUNT="$(echo $ONOFF | cut -d: -f1)"
	ID="$(echo $ONOFF | grep -v nobody | cut -d: -f3)"
	EXP="$(chage -l $ACCOUNT | grep "Account expires" | awk -F": " '{print $2}')"
	ONLINE="$(cat /etc/openvpn/openvpn-status.log | grep -Eom 1 $ACCOUNT | grep -Eom 1 $ACCOUNT)"
	if [[ $ID -ge 1000 ]]; then
		if [[ -z $ONLINE ]]; then
			printf "%-6s %-15s %-20s %-3s\n" "$C" "$ACCOUNT" "$CLIENTOFFLINE" "$EXP"
			OFF=$((OFF+1))
		else
			printf "%-6s %-15s %-20s %-3s\n" "$C" "$ACCOUNT" "$CLIENTONLINE" "$EXP"
			ON=$((ON+1))
		fi
			C=$((C+1))
        fi
done < /etc/passwd
TOTAL="$(awk -F: '$3 >= '1000' && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
echo ""
echo ""
echo -e "កំពុងតភ្ជាប់ ${GREEN}$ON${NC}  |  មិនបានតភ្ជាប់ ${RED}$OFF${NC}  |  បញ្ជីទាំងអស់ $TOTAL "
echo ""
exit

	;;
	
7) # ==================================================================================================================

echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
read -p "ឈ្មោះបញ្ជីដែលត្រូវការលុប : " CLIENT
egrep "^$CLIENT" /etc/passwd >/dev/null

if [ $? -eq 0 ]; then
	if [[ $CHECKSYSTEM ]]; then
		echo ""
		userdel -f $CLIENT
		echo ""
		echo -e "ឈ្មោះបញ្ជី ${GRAY}$CLIENT${NC} ត្រូវបានលុបចេញពីប្រព័ន្ធរួចរាល់ហើយ"
		echo ""
		exit
	else
		echo ""
		userdel -f $CLIENT
		cd /etc/openvpn/easy-rsa/
		./easyrsa --batch revoke $CLIENT
		EASYRSA_CRL_DAYS=3650 ./easyrsa gen-crl
		rm -rf pki/reqs/$CLIENT.req
		rm -rf pki/private/$CLIENT.key
		rm -rf pki/issued/$CLIENT.crt
		rm -rf /etc/openvpn/crl.pem
		cp /etc/openvpn/easy-rsa/pki/crl.pem /etc/openvpn/crl.pem
		chown nobody:$GROUPNAME /etc/openvpn/crl.pem
		echo ""
		echo -e "ឈ្មោះបញ្ជី ${GRAY}$CLIENT${NC} ត្រូវបានលុបចេញពីប្រព័ន្ធរួចរាល់ហើយ"
		echo ""
		exit
	fi
else
	echo ""
	echo "មិនមានឈ្មោះបញ្ជីដែលអ្នកកំណត់"
	echo ""
	exit
fi

	;;
8) # ==================================================================================================================

echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
			NUMBEROFCLIENTS=$(tail -n +2 /etc/openvpn/easy-rsa/pki/index.txt | grep -c "^V")
			if [[ "$NUMBEROFCLIENTS" = '0' ]]; then
				echo
				echo "no existing clients!ដែលមានហើយ!"
				exit
			fi
			echo
			echo "ជ្រើសរើស Client Certificate ដែលមានហើយដែលអ្នកត្រូវការលុបចេញ:"
			tail -n +2 /etc/openvpn/easy-rsa/pki/index.txt | grep "^V" | cut -d '=' -f 2 | nl -s ') '
			if [[ "$NUMBEROFCLIENTS" = '1' ]]; then
				read -p "Select one client [1]: " CLIENTNUMBER
			else
				read -p "Select one client [1-$NUMBEROFCLIENTS]: " CLIENTNUMBER
			fi
			CLIENT=$(tail -n +2 /etc/openvpn/easy-rsa/pki/index.txt | grep "^V" | cut -d '=' -f 2 | sed -n "$CLIENTNUMBER"p)
			echo
			read -p "តើអ្នកត្រូវការ cancel ចូលប្រើប្រាស់របស់ Client ឬទេ $CLIENT? [y/N]: " -e REVOKE
			if [[ "$REVOKE" = 'y' || "$REVOKE" = 'Y' ]]; then
				cd /etc/openvpn/easy-rsa/
				./easyrsa --batch revoke $CLIENT
				EASYRSA_CRL_DAYS=3650 ./easyrsa gen-crl
				rm -f pki/reqs/$CLIENT.req
				rm -f pki/private/$CLIENT.key
				rm -f pki/issued/$CLIENT.crt
				rm -f /etc/openvpn/crl.pem
				cp /etc/openvpn/easy-rsa/pki/crl.pem /etc/openvpn/crl.pem
				# CRL is read with each client connection, when OpenVPN is dropped to nobody
				chown nobody:$GROUPNAME /etc/openvpn/crl.pem
				echo
				echo "Certificate សំរាប់ $CLIENT ត្រូវបានលុបចេញរួចរាល់ហើយ!"
			else
				echo
				echo "ការលុប Certificate របស់ $CLIENT ត្រូវបាន Cancel!"
			fi
			exit
			;;
9) # ==================================================================================================================
#!/bin/bash
clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
echo "             === WELLCOM === "
echo " ======================================"
echo " កំណត់លេខសម្ងាត់សម្រាប់ការ Login ដោយឈ្មោះ root  "
echo " ====================================="
passwd
cat > /etc/ssh/sshd_config <<-END
# Package generated configuration file
# See the sshd_config(5) manpage for details

# What ports, IPs and protocols we listen for
Port 22
# Use these options to restrict which interfaces/protocols sshd will bind to
#ListenAddress ::
#ListenAddress 0.0.0.0
Protocol 2
# HostKeys for protocol version 2
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_dsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key
#Privilege Separation is turned on for security
UsePrivilegeSeparation yes

# Lifetime and size of ephemeral version 1 server key
KeyRegenerationInterval 3600
ServerKeyBits 1024

# Logging
SyslogFacility AUTH
LogLevel INFO

# Authentication:
LoginGraceTime 120
PermitRootLogin yes
StrictModes yes

RSAAuthentication yes
PubkeyAuthentication yes
#AuthorizedKeysFile	%h/.ssh/authorized_keys

# Don't read the user's ~/.rhosts and ~/.shosts files
IgnoreRhosts yes
# For this to work you will also need host keys in /etc/ssh_known_hosts
RhostsRSAAuthentication no
# similar for protocol version 2
HostbasedAuthentication no
# Uncomment if you don't trust ~/.ssh/known_hosts for RhostsRSAAuthentication
#IgnoreUserKnownHosts yes

# To enable empty passwords, change to yes (NOT RECOMMENDED)
PermitEmptyPasswords no

# Change to yes to enable challenge-response passwords (beware issues with
# some PAM modules and threads)
ChallengeResponseAuthentication no

# Change to no to disable tunnelled clear text passwords
PasswordAuthentication yes

# Kerberos options
#KerberosAuthentication no
#KerberosGetAFSToken no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes

X11Forwarding yes
X11DisplayOffset 10
PrintMotd no
PrintLastLog yes
TCPKeepAlive yes
#UseLogin no

#MaxStartups 10:30:60
#Banner /etc/issue.net

# Allow client to pass locale environment variables
AcceptEnv LANG LC_*

Subsystem sftp /usr/lib/openssh/sftp-server

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
UsePAM yes
END
service ssh restart
exit
;;

10) # ==================================================================================================================
 
  if [ ! -e /usr/local/bin/Reboot-Server ]; then
	echo '#!/bin/bash' > /usr/local/bin/Reboot-Server
	echo '' >> /usr/local/bin/Reboot-Server
	echo 'DATE=$(date +"%m-%d-%Y")' >> /usr/local/bin/Reboot-Server
	echo 'TIME=$(date +"%T")' >> /usr/local/bin/Reboot-Server
	echo 'echo "Reboot ថ្ងៃទី $DATE ម៉ោង $TIME" >> /usr/local/bin/Reboot-Log' >> /usr/local/bin/Reboot-Server
	echo '/sbin/shutdown -r now' >> /usr/local/bin/Reboot-Server
	chmod +x /usr/local/bin/Reboot-Server
fi

clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
echo -e "${GRAY}កំណត់ពេលវេលា Reboot server ដោយខ្លួនឯង ${NC} "
echo ""
echo -e "|${GRAY}1${NC}| Rebootរៀងរាល់  1 ម៉ោង"
echo -e "|${GRAY}2${NC}| Rebootរៀងរាល់  6 ម៉ោង"
echo -e "|${GRAY}3${NC}| Rebootរៀងរាល់ 12 ម៉ោង"
echo -e "|${GRAY}4${NC}| Rebootរៀងរាល់  1 ថ្ងៃ"
echo -e "|${GRAY}5${NC}| Rebootរៀងរាល់  7 ថ្ងៃ"
echo -e "|${GRAY}6${NC}| Rebootរៀងរាល់ 30 ថ្ងៃ"
echo -e "|${GRAY}7${NC}| បញ្ចប់ការ Reboot server"
echo -e "|${GRAY}8${NC}| ត្រួតពិនិត្យហើយរក្សាទុកការ reboot server"
echo -e "|${GRAY}9${NC}| លប់ការរក្សាទុក Rebooy server"
echo ""
read -p "ជ្រើសរើសមួយណាដែលអ្នកត្រូវការប្រើប្រាស់ : " REBOOT

case $REBOOT in

	1)

echo "0 * * * * root /usr/local/bin/Reboot-Server" > /etc/cron.d/Reboot-Server
echo ""
echo "កំណត់ការ Reboot server រៀងរាល់ 1 ម៉ោងម្ដងរួចរាល់ហើយ"
echo ""
exit

	;;

	2)

echo "0 */6 * * * root /usr/local/bin/Reboot-Server" > /etc/cron.d/Reboot-Server
echo ""
echo "កំណត់ការ Reboot server រៀងរាល់ 6 ម៉ោងម្ដងរួចរាល់ហើយ"
echo ""
exit

	;;

	3)

echo "0 */12 * * * root /usr/local/bin/Reboot-Server" > /etc/cron.d/Reboot-Server
echo ""
echo "កំណត់ការ Reboot server រៀងរាល់ 12 ម៉ោងម្ដងរួចរាល់ហើយ"
echo ""
exit

	;;

	4)

echo "0 0 * * * root /usr/local/bin/Reboot-Server" > /etc/cron.d/Reboot-Server
echo ""
echo "កំណត់ការ Reboot server រៀងរាល់ 1 ថ្ងៃរួចរាល់ហើយ"
echo ""
exit

	;;

	5)

echo "0 0 * * MON root /usr/local/bin/Reboot-Server" > /etc/cron.d/Reboot-Server
echo ""
echo "កំណត់ការ Reboot server រៀងរាល់ 7 ថ្ងៃរួចរាល់ហើយ"
echo ""
exit

	;;

	6)

echo "0 0 1 * * root /usr/local/bin/Reboot-Server" > /etc/cron.d/Reboot-Server
echo ""
echo "កំណត់ការ Reboot server រៀងរាល់ 30 ថ្ងៃរួចរាល់ហើយ"
echo ""
exit

	;;

	7)

rm -rf /usr/local/bin/Reboot-Server
echo ""
echo "បញ្ចប់ការ Reboot server រួចរាល់ហើយ"
echo ""
exit

	;;

	8)

if [[ ! -e /usr/local/bin/Reboot-Log ]]; then
	echo ""
	echo "មិនមានការរក្សាទុកការ Reboot server"
	echo ""
	exit
else
	echo ""
	cat /usr/local/bin/Reboot-Log
	echo ""
	exit
fi

	;;

	9)

rm -rf /usr/local/bin/Reboot-Log
echo ""
echo "លុបការរក្សាទុក Reboot server រួចរាល់ហើយ"
echo ""
exit

	;;

esac

	;;
	
11) # ==================================================================================================================

if [[ ! -e /usr/local/bin/Banwidth-Per-Client ]]; then
	apt-get install python
	wget -O /usr/local/bin/Banwidth-Per-Client "https://raw.githubusercontent.com/teamvpn/free-script/master/Banwidth-Per-Client"
	chmod +x /usr/local/bin/Banwidth-Per-Client
	clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
	echo "
	Banwidth-Per-Client
	echo ""
else
	clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
	Banwidth-Per-Client
	echo ""
fi

	;;
	
12) # ==================================================================================================================

echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
	read -p "ឈ្មោះបញ្ជីដែលត្រូវការប្ដូរលេខសម្ងាត់ : " CLIENTNAME
	egrep "^$CLIENTNAME" /etc/passwd >/dev/null

	if [ $? -eq 0 ]; then
		echo ""
		read -p "លេខសំងាត់ដែលត្រូវការប្ដូរ : " NEWPASSWORD
		read -p "បញ្ជាក់លេខសម្ងាត់ម្ដងទៀត : " RETYPEPASSWORD

		if [[ $NEWPASSWORD = $RETYPEPASSWORD ]]; then
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
			echo "ប្រព័ន្ធបានធ្វើការផ្លាស់ប្ដូរលេខសម្ងាត់រួចរាល់ហើយ"
			echo ""
			echo "ឈ្មោះបញ្ជីអ្នកប្រើប្រាស់ : $CLIENTNAME"
			echo "លេខសំងាត់ថ្មី : $NEWPASSWORD"
			echo ""
			exit
		else
			echo ""
			echo "ផ្លាស់ប្ដូរលេខសម្ងាត់មិនបានសម្រេច ការបញ្ជាក់លេខសម្ងាត់មិនត្រឹមត្រូវ"
			echo ""
			exit
		fi
	else

echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
		echo "មិនមានឈ្មោះបញ្ជីដែលអ្នកកំណត់នៅក្នុងប្រព័ន្ធ"
		echo ""
		read -p "กลับไปที่เมนู (Y or N) : " -e -i Y TOMENU

		if [[ "$TOMENU" = 'Y' ]]; then
			menu
			exit
		elif [[ "$TOMENU" = 'N' ]]; then
			exit
		fi
	fi

	;;
	
13) # ==================================================================================================================

echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
read -p "ឈ្មោះបញ្ជីដែលអ្នកត្រូវការផ្លាស់ប្ដូរថ្ងៃផុតកំណត់ : " -e CLIENT

if [ $? -eq 0 ]; then
	EXP="$(chage -l $CLIENT | grep "Account expires" | awk -F": " '{print $2}')"
	echo ""
	echo -e "បញ្ជីនេះផុតកំណត់ថ្ងៃទី ${GRAY}$EXP${NC}"
	echo ""
	read -p "ប្ដូរថ្ងៃផុតកំណត់ : " -e TimeActive
	userdel $CLIENT
	useradd -e `date -d "$TimeActive days" +"%Y-%m-%d"` -s /bin/false -M $CLIENT
	EXP="$(chage -l $CLIENT | grep "Account expires" | awk -F": " '{print $2}')"
	echo -e "$CLIENT\n$CLIENT\n"|passwd $CLIENT &> /dev/null
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
	echo "ឈ្មោះបញ្ជី : $CLIENT"
	echo "ផុតកំណត់ថ្ងៃទី : $EXP"
	echo ""
	exit

else

	echo ""
	echo "មិនមានឈ្មោះបញ្ជីដែលអ្នកកំណត់នៅក្នុងប្រព័ន្ធ"
	echo ""
	read -p "ត្រឡប់ទៅមេនុយដើម (Y or N) : " -e -i Y TOMENU

	if [[ "$TOMENU" = 'Y' ]]; then
		menu
		exit
	elif [[ "$TOMENU" = 'N' ]]; then
		exit
	fi
fi

	;;
14) # ==================================================================================================================

INTERFACE=`ifconfig | head -n1 | awk '{print $1}' | cut -d ':' -f 1`
TODAY=$(vnstat -i $INTERFACE | grep "today" | awk '{print $8" "substr ($9, 1, 1)}')
YESTERDAY=$(vnstat -i $INTERFACE | grep "yesterday" | awk '{print $8" "substr ($9, 1, 1)}')
WEEK=$(vnstat -i $INTERFACE -w | grep "current week" | awk '{print $9" "substr ($10, 1, 1)}')
RXWEEK=$(vnstat -i $INTERFACE -w | grep "current week" | awk '{print $3" "substr ($10, 1, 1)}')
TXWEEK=$(vnstat -i $INTERFACE -w | grep "current week" | awk '{print $6" "substr ($10, 1, 1)}')
MOUNT=$(vnstat -i $INTERFACE | grep "`date +"%b '%y"`" | awk '{print $9" "substr ($10, 1, 1)}')
RXMOUNT=$(vnstat -i $INTERFACE | grep "`date +"%b '%y"`" | awk '{print $3" "substr ($10, 1, 1)}')
TXMOUNT=$(vnstat -i $INTERFACE | grep "`date +"%b '%y"`" | awk '{print $6" "substr ($10, 1, 1)}')
TOTAL=$(vnstat -i $INTERFACE | grep "total:" | awk '{print $8" "substr ($9, 1, 1)}')
RXTOTAL=$(vnstat -i $INTERFACE | grep "rx:" | awk '{print $2" "substr ($9, 1, 1)}')
TXTOTAL=$(vnstat -i $INTERFACE | grep "tx:" | awk '{print $5" "substr ($9, 1, 1)}')

clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
	echo -e "Benwith ${GRAY}KHMERNET-VPN${NC}"
	echo ""
	echo -e "ថ្ងៃនេះ ${GRAY}$TODAY${NC}"
	echo -e "ម្សិលមិញ ${GRAY}$YESTERDAY${NC}"
	echo ""
	echo -e "ទទួល Data (rx) ${GRAY}$RXWEEK${NC} ផ្ញើ Data (tx) ${GRAY}$TXWEEK${NC}"
	echo -e "សប្ដាហ៍នេះ ${GRAY}$WEEK${NC}"
	echo ""
	echo -e "ទទួល Data (rx) ${GRAY}$RXMOUNT${NC} ផ្ញើ Data (tx) ${GRAY}$TXMOUNT${NC}"
	echo -e "សរុបទាំងអស់សម្រាប់ខែនេះ ${GRAY}$MOUNT${NC}"
	echo ""
	echo -e "ទទួល Data (rx) ${GRAY}$RXTOTAL${NC} ផ្ញើ Data (tx) ${GRAY}$TXTOTAL${NC}"
	echo -e "សរុបទាំងអស់ ${GRAY}$TOTAL${NC}"
	echo ""
	exit

	;;
	
	15) # ==================================================================================================================

clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
echo " បន្ថែមល្បឿនអ៊ីនធឺណេត  "
echo ""
echo "|1| បើកដំណើរការការកំណត់ល្បឿនអ៊ីនធឺណេត"
echo "|2| បិទដំណើរការការកំណត់ល្បឿនអុិនធឺណេត"
echo ""
read -p "ជ្រើសរើសមួយណាដែលអ្នកត្រូវការប្រើប្រាស់ : " LIMITINTERNET

case $LIMITINTERNET in

	1)

echo ""
echo "|1| Megabyte (Mbps)"
echo "|2| Kilobyte (Kbps)"
echo ""
read -p "ជ្រើសរើសមួយណាដែលអ្នកត្រូវការបន្ថែមលឿនអ៊ីនធឺណេត : " -e PERSECOND
case $PERSECOND in
	1)
	PERSECOND=mbit
	;;
	2)
	PERSECOND=kbit
	;;
esac

echo ""
echo ""
echo " របៀបការកំណត់ : ចង់ឱ្យមានល្បឿន10Mbps សរសេរលេខ 10 "
echo " ថាចង់កំណត់ឱ្យមានល្បឿន 512Kbps សរសេរលេខ 512 "
echo ""
read -p "កំណត់ល្បឿនការ ដោនឡូត : " -e CHDL
read -p "កំណត់ល្បឿនការ អាប់ឡូត : " -e CHUL

DNLD=$CHDL$PERSECOND
UPLD=$CHUL$PERSECOND

TC=/sbin/tc

IF="$(ip ro | awk '$1 == "default" { print $5 }')"
IP="$(ip -o ro get $(ip ro | awk '$1 == "default" { print $3 }') | awk '{print $5}')/32"     # Host IP

U32="$TC filter add dev $IF protocol ip parent 1: prio 1 u32"

    $TC qdisc add dev $IF root handle 1: htb default 30
    $TC class add dev $IF parent 1: classid 1:1 htb rate $DNLD
    $TC class add dev $IF parent 1: classid 1:2 htb rate $UPLD
    $U32 match ip dst $IP flowid 1:1
    $U32 match ip src $IP flowid 1:2
    echo ""
    echo " ល្បឿនការដោនឡូត $CHDL $PERSECOND "
    echo " ល្បឿងការអាប់ឡូត $CHUL $PERSECOND"
    echo ""
    echo "បើកដំណើរការការកំណត់ល្បឿនអ៊ីនធឺណេត"
    echo ""
    exit

	;;

	2)

TC=/sbin/tc
IF="$(ip ro | awk '$1 == "default" { print $5 }')"

    $TC qdisc del dev $IF root
    echo ""
    echo " បិទការកំណត់ល្បឿនអ៊ីនធឺណេត"
    echo ""
    exit

	;;

esac

	;;
	
	16) # ==================================================================================================================
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
if [[ ! $CHECKSYSTEM ]]; then
	echo ""
	echo "ប្រើប្រាស់មិនបានជាមួយ server បច្ចុប្បន្ន"
	echo ""
	exit
fi

clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
echo " Lock ហើយ Unlock បញ្ជីរអ្នកប្រើប្រាស់  "
echo ""
echo " |1| Lock បញ្ជីអ្នកប្រើប្រាស់"
echo " |2| Unlock បញ្ជីអ្នកប្រើប្រាស់"
echo ""
read -p "ជ្រើសរើសមួយណាដែលអ្នកត្រូវការប្រើប្រាស់ : " BandUB
case $BandUB in

	1)

echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
read -p "ឈ្មោះបញ្ជីដែលត្រូវការ Lock : " CLIENT

egrep "^$CLIENT" /etc/passwd >/dev/null
if [ $? -eq 0 ]; then
	echo "V=$CLIENT" >> /usr/local/bin/Ban-Unban
	passwd -l $CLIENT
	clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
	echo "បញ្ជីឈ្មោះ $CLIENT ត្រូវបាន Lock រួចរាល់ហើយ"
	echo ""
	exit
elif [ $? -eq 1 ]; then
	clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
	echo "មិនមានឈ្មោះបញ្ជីដែលអ្នកកំណត់នៅក្នុងប្រព័ន្ធ"
	echo ""
	read -p "ត្រឡប់ទៅមេនុយដើមกลับไปที่เมนู (Y or N) : " -e -i Y TOMENU

	if [[ "$TOMENU" = 'Y' ]]; then
		menu
		exit
	elif [[ "$TOMENU" = 'N' ]]; then
		exit
	fi
fi

	;;

	2)

echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
read -p "ឈ្មោះបញ្ជីដែលអ្នកត្រូវការ unlock : " CLIENT

egrep "^$CLIENT" /etc/passwd >/dev/null
if [ $? -eq 0 ]; then
	sed -i 's/V=$CLIENT/R=$CLIENT/g' /usr/local/bin/Ban-Unban
	passwd -u $CLIENT
	clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
	echo " បញ្ជីឈ្មោះ $CLIENT ត្រូវបាន unlock រួចរាល់ហើយ "
	echo ""
	exit

elif [ $? -eq 1 ]; then
	clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
	echo " ឈ្មោះបញ្ជីកំណត់មិនបាន Lock ឬមិនមានឈ្មោះដែលកំណត់នៅក្នុងប្រព័ន្ធ "
	echo ""
	read -p "ត្រឡប់ទៅមេនុយដើម (Y or N) : " -e -i Y TOMENU

	if [[ "$TOMENU" = 'Y' ]]; then
		menu
		exit
	elif [[ "$TOMENU" = 'N' ]]; then
		exit
	fi
fi

	;;

esac

	;;


17) # ================================================================================================================== 

;;
18) # ==================================================================================================================
DATE1=$(vnstat -h | sed -n '16p' | awk '{print $1}')
RX1=$(vnstat -h | sed -n '16p' | awk '{print $2}' | cut -d ',' -f 1-20 --output-delimiter='')
TX1=$(vnstat -h | sed -n '16p' | awk '{print $3}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX1=$(echo "scale=2;$RX1 / 1000000" | bc)
CONTX1=$(echo "scale=2;$TX1 / 1000000" | bc)

DATE2=$(vnstat -h | sed -n '17p' | awk '{print $1}')
RX2=$(vnstat -h | sed -n '17p' | awk '{print $2}' | cut -d ',' -f 1-20 --output-delimiter='')
TX2=$(vnstat -h | sed -n '17p' | awk '{print $3}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX2=$(echo "scale=2;$RX2 / 1000000" | bc)
CONTX2=$(echo "scale=2;$TX2 / 1000000" | bc)

DATE3=$(vnstat -h | sed -n '18p' | awk '{print $1}')
RX3=$(vnstat -h | sed -n '18p' | awk '{print $2}' | cut -d ',' -f 1-20 --output-delimiter='')
TX3=$(vnstat -h | sed -n '18p' | awk '{print $3}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX3=$(echo "scale=2;$RX3 / 1000000" | bc)
CONTX3=$(echo "scale=2;$TX3 / 1000000" | bc)

DATE4=$(vnstat -h | sed -n '19p' | awk '{print $1}')
RX4=$(vnstat -h | sed -n '19p' | awk '{print $2}' | cut -d ',' -f 1-20 --output-delimiter='')
TX4=$(vnstat -h | sed -n '19p' | awk '{print $3}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX4=$(echo "scale=2;$RX4 / 1000000" | bc)
CONTX4=$(echo "scale=2;$TX4 / 1000000" | bc)

DATE5=$(vnstat -h | sed -n '20p' | awk '{print $1}')
RX5=$(vnstat -h | sed -n '20p' | awk '{print $2}' | cut -d ',' -f 1-20 --output-delimiter='')
TX5=$(vnstat -h | sed -n '20p' | awk '{print $3}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX5=$(echo "scale=2;$RX4 / 1000000" | bc)
CONTX5=$(echo "scale=2;$TX4 / 1000000" | bc)

DATE6=$(vnstat -h | sed -n '21p' | awk '{print $1}')
RX6=$(vnstat -h | sed -n '21p' | awk '{print $2}' | cut -d ',' -f 1-20 --output-delimiter='')
TX6=$(vnstat -h | sed -n '21p' | awk '{print $3}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX6=$(echo "scale=2;$RX6 / 1000000" | bc)
CONTX6=$(echo "scale=2;$TX6 / 1000000" | bc)

DATE7=$(vnstat -h | sed -n '22p' | awk '{print $1}')
RX7=$(vnstat -h | sed -n '22p' | awk '{print $2}' | cut -d ',' -f 1-20 --output-delimiter='')
TX7=$(vnstat -h | sed -n '22p' | awk '{print $3}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX7=$(echo "scale=2;$RX7 / 1000000" | bc)
CONTX7=$(echo "scale=2;$TX7 / 1000000" | bc)

DATE8=$(vnstat -h | sed -n '23p' | awk '{print $1}')
RX8=$(vnstat -h | sed -n '23p' | awk '{print $2}' | cut -d ',' -f 1-20 --output-delimiter='')
TX8=$(vnstat -h | sed -n '23p' | awk '{print $3}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX8=$(echo "scale=2;$RX8 / 1000000" | bc)
CONTX8=$(echo "scale=2;$TX8 / 1000000" | bc)

DATE9=$(vnstat -h | sed -n '16p' | awk '{print $4}')
RX9=$(vnstat -h | sed -n '16p' | awk '{print $5}' | cut -d ',' -f 1-20 --output-delimiter='')
TX9=$(vnstat -h | sed -n '16p' | awk '{print $6}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX9=$(echo "scale=2;$RX9 / 1000000" | bc)
CONTX9=$(echo "scale=2;$TX9 / 1000000" | bc)

DATE10=$(vnstat -h | sed -n '17p' | awk '{print $4}')
RX10=$(vnstat -h | sed -n '17p' | awk '{print $5}' | cut -d ',' -f 1-20 --output-delimiter='')
TX10=$(vnstat -h | sed -n '17p' | awk '{print $6}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX10=$(echo "scale=2;$RX10 / 1000000" | bc)
CONTX10=$(echo "scale=2;$TX10 / 1000000" | bc)

DATE11=$(vnstat -h | sed -n '18p' | awk '{print $4}')
RX11=$(vnstat -h | sed -n '18p' | awk '{print $5}' | cut -d ',' -f 1-20 --output-delimiter='')
TX11=$(vnstat -h | sed -n '18p' | awk '{print $6}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX11=$(echo "scale=2;$RX11 / 1000000" | bc)
CONTX11=$(echo "scale=2;$TX11 / 1000000" | bc)

DATE12=$(vnstat -h | sed -n '19p' | awk '{print $4}')
RX12=$(vnstat -h | sed -n '19p' | awk '{print $5}' | cut -d ',' -f 1-20 --output-delimiter='')
TX12=$(vnstat -h | sed -n '19p' | awk '{print $6}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX12=$(echo "scale=2;$RX12 / 1000000" | bc)
CONTX12=$(echo "scale=2;$TX12 / 1000000" | bc)

DATE13=$(vnstat -h | sed -n '20p' | awk '{print $4}')
RX13=$(vnstat -h | sed -n '20p' | awk '{print $5}' | cut -d ',' -f 1-20 --output-delimiter='')
TX13=$(vnstat -h | sed -n '20p' | awk '{print $6}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX13=$(echo "scale=2;$RX13 / 1000000" | bc)
CONTX13=$(echo "scale=2;$TX13 / 1000000" | bc)

DATE14=$(vnstat -h | sed -n '21p' | awk '{print $4}')
RX14=$(vnstat -h | sed -n '21p' | awk '{print $5}' | cut -d ',' -f 1-20 --output-delimiter='')
TX14=$(vnstat -h | sed -n '21p' | awk '{print $6}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX14=$(echo "scale=2;$RX14 / 1000000" | bc)
CONTX14=$(echo "scale=2;$TX14 / 1000000" | bc)

DATE15=$(vnstat -h | sed -n '22p' | awk '{print $4}')
RX15=$(vnstat -h | sed -n '22p' | awk '{print $5}' | cut -d ',' -f 1-20 --output-delimiter='')
TX15=$(vnstat -h | sed -n '22p' | awk '{print $6}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX15=$(echo "scale=2;$RX15 / 1000000" | bc)
CONTX15=$(echo "scale=2;$TX15 / 1000000" | bc)

DATE16=$(vnstat -h | sed -n '23p' | awk '{print $4}')
RX16=$(vnstat -h | sed -n '23p' | awk '{print $5}' | cut -d ',' -f 1-20 --output-delimiter='')
TX16=$(vnstat -h | sed -n '23p' | awk '{print $6}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX16=$(echo "scale=2;$RX16 / 1000000" | bc)
CONTX16=$(echo "scale=2;$TX16 / 1000000" | bc)

DATE17=$(vnstat -h | sed -n '16p' | awk '{print $7}')
RX17=$(vnstat -h | sed -n '16p' | awk '{print $8}' | cut -d ',' -f 1-20 --output-delimiter='')
TX17=$(vnstat -h | sed -n '16p' | awk '{print $9}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX17=$(echo "scale=2;$RX17 / 1000000" | bc)
CONTX17=$(echo "scale=2;$TX17 / 1000000" | bc)

DATE18=$(vnstat -h | sed -n '17p' | awk '{print $7}')
RX18=$(vnstat -h | sed -n '17p' | awk '{print $8}' | cut -d ',' -f 1-20 --output-delimiter='')
TX18=$(vnstat -h | sed -n '17p' | awk '{print $9}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX18=$(echo "scale=2;$RX18 / 1000000" | bc)
CONTX18=$(echo "scale=2;$TX18 / 1000000" | bc)

DATE19=$(vnstat -h | sed -n '18p' | awk '{print $7}')
RX19=$(vnstat -h | sed -n '18p' | awk '{print $8}' | cut -d ',' -f 1-20 --output-delimiter='')
TX19=$(vnstat -h | sed -n '18p' | awk '{print $9}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX19=$(echo "scale=2;$RX19 / 1000000" | bc)
CONTX19=$(echo "scale=2;$TX19 / 1000000" | bc)

DATE20=$(vnstat -h | sed -n '19p' | awk '{print $7}')
RX20=$(vnstat -h | sed -n '19p' | awk '{print $8}' | cut -d ',' -f 1-20 --output-delimiter='')
TX20=$(vnstat -h | sed -n '19p' | awk '{print $9}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX20=$(echo "scale=2;$RX20 / 1000000" | bc)
CONTX20=$(echo "scale=2;$TX20 / 1000000" | bc)

DATE21=$(vnstat -h | sed -n '20p' | awk '{print $7}')
RX21=$(vnstat -h | sed -n '20p' | awk '{print $8}' | cut -d ',' -f 1-20 --output-delimiter='')
TX21=$(vnstat -h | sed -n '20p' | awk '{print $9}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX21=$(echo "scale=2;$RX21 / 1000000" | bc)
CONTX21=$(echo "scale=2;$TX21 / 1000000" | bc)

DATE22=$(vnstat -h | sed -n '21p' | awk '{print $7}')
RX22=$(vnstat -h | sed -n '21p' | awk '{print $8}' | cut -d ',' -f 1-20 --output-delimiter='')
TX22=$(vnstat -h | sed -n '21p' | awk '{print $9}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX22=$(echo "scale=2;$RX22 / 1000000" | bc)
CONTX22=$(echo "scale=2;$TX22 / 1000000" | bc)

DATE23=$(vnstat -h | sed -n '22p' | awk '{print $7}')
RX23=$(vnstat -h | sed -n '22p' | awk '{print $8}' | cut -d ',' -f 1-20 --output-delimiter='')
TX23=$(vnstat -h | sed -n '22p' | awk '{print $9}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX23=$(echo "scale=2;$RX23 / 1000000" | bc)
CONTX23=$(echo "scale=2;$TX23 / 1000000" | bc)

DATE24=$(vnstat -h | sed -n '23p' | awk '{print $7}')
RX24=$(vnstat -h | sed -n '23p' | awk '{print $8}' | cut -d ',' -f 1-20 --output-delimiter='')
TX24=$(vnstat -h | sed -n '23p' | awk '{print $9}' | cut -d ',' -f 1-20 --output-delimiter='')
CONRX24=$(echo "scale=2;$RX24 / 1000000" | bc)
CONTX24=$(echo "scale=2;$TX24 / 1000000" | bc)

clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
NOW=`echo -e "${GREEN}ពេលវេលាបច្ចុប្បន្ន${NC}"`
echo ""
echo -e "${GRAY}ចំនួនលេខទទួលហើយផ្ញើ Data នឹងបង្ហាញកាលវាស់បរិមាណជា Gigabyte ទាំងអស់${NC}"
printf "%-7s %-7s %-10s\n" "เวลา" "รับข้อมูล" "ส่งข้อมูล"
echo ""
printf "%-3s %-6s %-10s\n" "$DATE1" "$CONRX1" "$CONTX1"
printf "%-3s %-6s %-10s\n" "$DATE2" "$CONRX2" "$CONTX2"
printf "%-3s %-6s %-10s\n" "$DATE3" "$CONRX3" "$CONTX3"
printf "%-3s %-6s %-10s\n" "$DATE4" "$CONRX4" "$CONTX4"
printf "%-3s %-6s %-10s\n" "$DATE5" "$CONRX5" "$CONTX5"
printf "%-3s %-6s %-10s\n" "$DATE6" "$CONRX6" "$CONTX6"
printf "%-3s %-6s %-10s\n" "$DATE7" "$CONRX7" "$CONTX7"
printf "%-3s %-6s %-10s\n" "$DATE8" "$CONRX8" "$CONTX8"
printf "%-3s %-6s %-10s\n" "$DATE9" "$CONRX9" "$CONTX9"
printf "%-3s %-6s %-10s\n" "$DATE10" "$CONRX10" "$CONTX10"
printf "%-3s %-6s %-10s\n" "$DATE11" "$CONRX11" "$CONTX11"
printf "%-3s %-6s %-10s\n" "$DATE12" "$CONRX12" "$CONTX12"
printf "%-3s %-6s %-10s\n" "$DATE13" "$CONRX13" "$CONTX13"
printf "%-3s %-6s %-10s\n" "$DATE14" "$CONRX14" "$CONTX14"
printf "%-3s %-6s %-10s\n" "$DATE15" "$CONRX15" "$CONTX15"
printf "%-3s %-6s %-10s\n" "$DATE16" "$CONRX16" "$CONTX16"
printf "%-3s %-6s %-10s\n" "$DATE17" "$CONRX17" "$CONTX17"
printf "%-3s %-6s %-10s\n" "$DATE18" "$CONRX18" "$CONTX18"
printf "%-3s %-6s %-10s\n" "$DATE19" "$CONRX19" "$CONTX19"
printf "%-3s %-6s %-10s\n" "$DATE20" "$CONRX20" "$CONTX20"
printf "%-3s %-6s %-10s\n" "$DATE21" "$CONRX21" "$CONTX21"
printf "%-3s %-6s %-10s\n" "$DATE22" "$CONRX22" "$CONTX22"
printf "%-3s %-6s %-10s\n" "$DATE23" "$CONRX23" "$CONTX23"
printf "%-3s %-6s %-5s %-5s\n" "$DATE24" "$CONRX24" "$CONTX24" "< $NOW"
echo ""
exit

	;;
	
	19) # ==================================================================================================================

clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
nano /usr/local/bin/m
exit
	;;
	
	20) # ==================================================================================================================

# Banner
rm /etc/bannerssh
wget -O /etc/bannerssh "https://raw.githubusercontent.com/teamvpn/free-script/master/issue.net"
echo "Banner /etc/bannerssh" >> /etc/ssh/sshd_config
service ssh restart

	;;
	
	21) # ==================================================================================================================
;;

	22) # ==================================================================================================================
#!/bin/bash
# Script by : ប្រិច ឡង់ឌី
rm -f /root/opensshport
rm -f /root/dropbearport
rm -f /root/stunnel4port
rm -f /root/openvpnport
rm -f /root/squidport
opensshport="$(netstat -ntlp | grep -i ssh | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"
dropbearport="$(netstat -nlpt | grep -i dropbear | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"
stunnel4port="$(netstat -nlpt | grep -i stunnel | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"
openvpnport="$(netstat -nlpt | grep -i openvpn | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"
squidport="$(cat /etc/squid3/squid.conf | grep -i http_port | awk '{print $2}')"
echo $opensshport > /root/opensshport
cat > /root/opensshport <<-END
$opensshport
END
echo $dropbearport > /root/dropbearport
cat > /root/dropbearport <<-END
$dropbearport
END
echo $stunnel4port > /root/stunnel4port
cat > /root/stunnel4port <<-END
$stunnel4port
END
echo $openvpnport > /root/openvpnport
cat > /root/openvpnport <<-END
$openvpnport
END
echo $squidport > /root/squidport
cat > /root/squidport <<-END
$squidport
END

cd
clear
echo -e "\e[0m                                                   "
echo -e "\e[94m[][][]======================================[][][]"
echo -e "\e[0m                                                   "
echo -e "\e[93m                   OpenVPN Port                   "
echo -e "\e[93m                       "$openvpnport
echo -e "\e[0m                                                   "
read -p "       ចង់ផ្លាស់ប្ដូរ Port មួយណា? :  " Port
egrep "^$Port" /root/openvpnport >/dev/null
if [ $? -eq 0 ]; then
	read -p "            From Port $Port -> Port " Port_New
	if grep -Fxq $Port_New /root/opensshport; then
		echo -e "\e[0m                                                   "
		echo -e "\e[91m              OpenSSH Port แก้ไข              "
		echo -e "\e[91m              Port ព្រមដំណើរការ             "
		echo -e "\e[0m                                                   "
		echo -e "\e[94m[][][]======================================[][][]\e[0m"
		exit
	fi
	if grep -Fxq $Port_New /root/dropbearport; then
		echo -e "\e[0m                                                   "
		echo -e "\e[91m              Dropbear Port แก้ไข              "
		echo -e "\e[91m              Port ព្រមដំណើរការ              "
		echo -e "\e[0m                                                   "
		echo -e "\e[94m[][][]======================================[][][]\e[0m"
		exit
	fi
	if grep -Fxq $Port_New /root/stunnel4port; then
		echo -e "\e[0m                                                   "
		echo -e "\e[91m              Stunnel4 Port แก้ไข               "
		echo -e "\e[91m              Port Is ព្រមដំណើរការ              "
		echo -e "\e[0m                                                   "
		echo -e "\e[94m[][][]======================================[][][]\e[0m"
		exit
	fi
	if grep -Fxq $Port_New /root/squidport; then
		echo -e "\e[0m                                                   "
		echo -e "\e[91m               Squid3 Port แก้ไข                "
		echo -e "\e[91m              Port ព្រមដំណើរការ             "
		echo -e "\e[0m                                                   "
		echo -e "\e[94m[][][]======================================[][][]\e[0m"
		exit
	fi
	Port_Change="s/$Port/$Port_New/g";
	sed -i $Port_Change /etc/openvpn/server.conf
	sed -i $Port_Change /home/vps/public_html/client.ovpn
	sed -i $Port_Change /root/openvpnport
	openvpnport="$(netstat -nlpt | grep -i openvpn | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"
	echo $openvpnport > /root/openvpnport
	cat > /root/openvpnport <<-END
	$openvpnport
	END
	service openvpn restart
	sleep 4
	openvpnport="$(netstat -nlpt | grep -i openvpn | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"
	clear
	echo -e "\e[0m                                                   "
	echo -e "\e[94m[][][]======================================[][][]"
	echo -e "\e[0m                                                   "
	echo -e "\e[93m           AutoScriptVPS by  ប្រិច ឡង់ឌី           "
	echo -e "\e[0m                                                   "
	echo -e "\e[93m                   OpenVPN Port                   "
	echo -e "\e[93m                       "$openvpnport
	echo -e "\e[0m                                                   "
	echo -e "\e[94m[][][]======================================[][][]\e[0m"

else
	echo -e "\e[0m                                                   "
	echo -e "\e[91m                 Port Doesnt Exit                 "
	echo -e "\e[0m                                                   "
	echo -e "\e[94m[][][]======================================[][][]\e[0m"
fi

;;

	23) # ==================================================================================================================
	
	clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
if [[ "$VERSION_ID" = 'VERSION_ID="9"' || "$VERSION_ID" = 'VERSION_ID="16.04"' || "$VERSION_ID" = 'VERSION_ID="18.04"' ]]; then
	nano /etc/squid/squid.conf
	service squid restart
	exit
elif [[ "$VERSION_ID" = 'VERSION_ID="7"' || "$VERSION_ID" = 'VERSION_ID="8"' || "$VERSION_ID" = 'VERSION_ID="14.04"' ]]; then
	nano /etc/squid3/squid.conf
	service squid3 restart
	exit
fi
	;;
	
	24) # ==================================================================================================================
	clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
nano /etc/ssh/sshd_config
service ssh restart
exit
;;

	25) # ==================================================================================================================

clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo -e "ផ្លាស់ប្ដូរ Config ផ្សេងៗនៅក្នុងប្រព័ទ្ធ ${GRAY}KHMERNET-VPN${NC}"
echo ""
echo -e "|${GRAY}1${NC}| OPENVPN ហ្វាលើបង្កើត Config"
echo -e "|${GRAY}2${NC}| OPENVPN ហ្វាល់ data server"
echo ""
echo ""
read -p "ជ្រើសរើសមួយណាដែលអ្នកត្រូវការប្រើប្រាស់ : " EDIT

case $EDIT in

	1)
nano /etc/openvpn/client-common.txt
exit
	;;
	2)
nano /etc/openvpn/server.conf
exit
	;;

esac

	;;
	
	

	26) # ==================================================================================================================

#!/bin/bash
		clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
		service openvpn restart
		echo -e "\e[0m                                                   "
		echo -e "\e[94m[][][]======================================[][][]"
		echo -e "\e[0m                                                   "
		echo -e "\e[93m            OpenVPN Service Restarted             "
		echo -e "\e[0m                                                   "
		echo -e "\e[94m[][][]======================================[][][]\e[0m"
		exit
		;;
	
	
	
		27) # ==================================================================================================================

		clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
		reboot
		exit
	;;
	
	
	28) # ==================================================================================================================

#!/bin/bash
		clear
echo ""
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GRAY} #    OS  DEBIAN 8-9-10  OS  UBUNTU 14-16-18    #    "
echo -e "${GRAY} #         BY : ប្រិច ឡង់ឌី                         #    "
echo -e "${GRAY} #    Telegram : @dev_vpn                       #    "
echo -e "${GRAY} #   Channel Telegram : @khmernetvpn            #    "
echo -e "${GRAY} =============== OS-32 & 64-bit =================    "
echo -e "${GREEN} IP SERVER: $IP "
echo -e "${NC} "
echo ""
if [[ "$VERSION_ID" = 'VERSION_ID="9"' || "$VERSION_ID" = 'VERSION_ID="16.04"' || "$VERSION_ID" = 'VERSION_ID="18.04"' ]]; then
		if [[ ! -e /etc/squid/squid.conf ]]; then
			echo ""
			echo "	នៅមិនទាន់បានដំឡើង Squid Proxy"
			echo ""
			exit
		else
		service squid restart
		echo -e "\e[0m                                                   "
		echo -e "\e[94m[][][]======================================[][][]"
		echo -e "\e[0m                                                   "
		echo -e "\e[93m            Squid Proxy Restarted             "
		echo -e "\e[0m                                                   "
		echo -e "\e[94m[][][]======================================[][][]\e[0m"
		exit
		fi
	elif [[ "$VERSION_ID" = 'VERSION_ID="7"' || "$VERSION_ID" = 'VERSION_ID="8"' || "$VERSION_ID" = 'VERSION_ID="14.04"' ]]; then
		if [[ ! -e /etc/squid3/squid.conf ]]; then
			echo ""
			echo "	នៅមិនទាន់បានដំឡើង Squid3 Proxy"
			echo ""
			exit
		else
		service squid3 restart
		echo -e "\e[0m                                                   "
		echo -e "\e[94m[][][]======================================[][][]"
		echo -e "\e[0m                                                   "
		echo -e "\e[93m            Squid3 Proxy Restarted             "
		echo -e "\e[0m                                                   "
		echo -e "\e[94m[][][]======================================[][][]\e[0m"
		exit
		fi
	fi
		;;
	
	
	00) # ==================================================================================================================

cd /usr/local/bin
wget -q -O m "https://raw.githubusercontent.com/teamvpn/free-script/master/Menu"
chmod +x /usr/local/bin/m
m

	;;
esac
